// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "sudo/internal/models"

func GlobalTaskModal(boards []models.Board) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"global-task-modal\" class=\"hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"><div class=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\"><div class=\"flex items-center justify-between p-6 border-b border-gray-200\"><h3 class=\"text-lg font-semibold text-gray-900\">Create New Task</h3><button onclick=\"closeGlobalTaskModal()\" class=\"text-gray-400 hover:text-gray-600\"><svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg></button></div><form id=\"global-task-form\" hx-post=\"/tasks\" hx-trigger=\"submit\" class=\"p-6 space-y-6\"><!-- Board Selection --><div><label for=\"global-task-board\" class=\"block text-sm font-medium text-gray-700 mb-2\">Board *</label> <select id=\"global-task-board\" name=\"board_id\" required class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\" onchange=\"loadBoardColumns(this.value)\"><option value=\"\">Select a board...</option> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, board := range boards {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<option value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(board.ID.String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/global_task_modal.templ`, Line: 40, Col: 60}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(board.Title)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/global_task_modal.templ`, Line: 40, Col: 74}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</option>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</select></div><!-- Task Title --><div><label for=\"global-task-title\" class=\"block text-sm font-medium text-gray-700 mb-2\">Task Title *</label> <input type=\"text\" id=\"global-task-title\" name=\"title\" required class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\" placeholder=\"Enter task title...\"></div><!-- Task Description --><div><label for=\"global-task-description\" class=\"block text-sm font-medium text-gray-700 mb-2\">Description</label> <textarea id=\"global-task-description\" name=\"description\" rows=\"4\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\" placeholder=\"Describe the task in detail...\"></textarea></div><!-- Column and Priority Row --><div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\"><!-- Column Selection --><div><label for=\"global-task-column\" class=\"block text-sm font-medium text-gray-700 mb-2\">Column *</label> <select id=\"global-task-column\" name=\"column_id\" required class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\" disabled><option value=\"\">Select a board first...</option></select></div><!-- Priority --><div><label for=\"global-task-priority\" class=\"block text-sm font-medium text-gray-700 mb-2\">Priority</label> <select id=\"global-task-priority\" name=\"priority\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"><option value=\"Low\">Low Priority</option> <option value=\"Medium\" selected>Medium Priority</option> <option value=\"High\">High Priority</option> <option value=\"Urgent\">Urgent</option></select></div></div><!-- Assignee and Deadline Row --><div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\"><!-- Assignee --><div><label for=\"global-task-assignee\" class=\"block text-sm font-medium text-gray-700 mb-2\">Assign to</label> <select id=\"global-task-assignee\" name=\"assignee_id\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\" disabled><option value=\"\">Select a board first...</option></select></div><!-- Deadline --><div><label for=\"global-task-deadline\" class=\"block text-sm font-medium text-gray-700 mb-2\">Deadline</label> <input type=\"datetime-local\" id=\"global-task-deadline\" name=\"deadline\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"></div></div><!-- Tags --><div><label for=\"global-task-tags\" class=\"block text-sm font-medium text-gray-700 mb-2\">Tags (comma-separated)</label> <input type=\"text\" id=\"global-task-tags\" name=\"tags\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\" placeholder=\"frontend, bug, urgent...\"></div><!-- Form Actions --><div class=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\"><button type=\"button\" onclick=\"closeGlobalTaskModal()\" class=\"px-4 py-2 text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 transition-colors\">Cancel</button> <button type=\"submit\" class=\"px-4 py-2 bg-blue-600 text-white border border-transparent rounded-md hover:bg-blue-700 transition-colors\">Create Task</button></div></form></div></div><script>\r\n        function closeGlobalTaskModal() {\r\n            document.getElementById('global-task-modal').classList.add('hidden');\r\n            document.getElementById('global-task-form').reset();\r\n            // Reset column and assignee dropdowns\r\n            const columnSelect = document.getElementById('global-task-column');\r\n            const assigneeSelect = document.getElementById('global-task-assignee');\r\n            columnSelect.disabled = true;\r\n            assigneeSelect.disabled = true;\r\n            columnSelect.innerHTML = '<option value=\"\">Select a board first...</option>';\r\n            assigneeSelect.innerHTML = '<option value=\"\">Select a board first...</option>';\r\n        }\r\n        \r\n        function loadBoardColumns(boardId) {\r\n            const columnSelect = document.getElementById('global-task-column');\r\n            const assigneeSelect = document.getElementById('global-task-assignee');\r\n            \r\n            if (!boardId) {\r\n                columnSelect.disabled = true;\r\n                assigneeSelect.disabled = true;\r\n                columnSelect.innerHTML = '<option value=\"\">Select a board first...</option>';\r\n                assigneeSelect.innerHTML = '<option value=\"\">Select a board first...</option>';\r\n                return;\r\n            }\r\n            \r\n            // Fetch columns for the selected board\r\n            fetch(`/api/boards/${boardId}/columns`, {\r\n                credentials: 'include'\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                columnSelect.innerHTML = '<option value=\"\">Select a column...</option>';\r\n                data.columns?.forEach(column => {\r\n                    columnSelect.innerHTML += `<option value=\"${column.id}\">${column.title}</option>`;\r\n                });\r\n                columnSelect.disabled = false;\r\n            })\r\n            .catch(error => {\r\n                console.error('Error loading columns:', error);\r\n                columnSelect.innerHTML = '<option value=\"\">Error loading columns</option>';\r\n            });\r\n            \r\n            // Fetch board members for assignee dropdown\r\n            fetch(`/api/boards/${boardId}/members`, {\r\n                credentials: 'include'\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                assigneeSelect.innerHTML = '<option value=\"\">Unassigned</option>';\r\n                data.members?.forEach(member => {\r\n                    assigneeSelect.innerHTML += `<option value=\"${member.user_id}\">${member.user_name}</option>`;\r\n                });\r\n                assigneeSelect.disabled = false;\r\n            })\r\n            .catch(error => {\r\n                console.error('Error loading board members:', error);\r\n                assigneeSelect.innerHTML = '<option value=\"\">Error loading members</option>';\r\n            });\r\n        }\r\n        \r\n        // Handle form submission\r\n        document.getElementById('global-task-form').addEventListener('htmx:afterRequest', function(event) {\r\n            if (event.detail.xhr.status === 200) {\r\n                closeGlobalTaskModal();\r\n                // Show success message or refresh page\r\n                window.location.reload();\r\n            }\r\n        });\r\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
