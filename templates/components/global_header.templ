package components

import "sudo/internal/models"

templ GlobalHeader(title string, currentBoard *models.Board, parentBoard *models.Board, onlineUsers []models.User) {
    <header class="bg-white shadow-sm border-b sticky top-0 z-40">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-16">
                <!-- Left Side: Navigation -->
                <div class="flex items-center space-x-4">
                    <!-- Back Button -->
                    if currentBoard != nil {
                        if parentBoard != nil {
                            <a href={ templ.SafeURL("/boards/" + parentBoard.ID.String()) } class="text-gray-500 hover:text-gray-700" title="Back to parent board">
                                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                                </svg>
                            </a>
                        } else {
                            <a href="/dashboard" class="text-gray-500 hover:text-gray-700" title="Back to dashboard">
                                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                                </svg>
                            </a>
                        }
                    }
                    
                    <!-- Title and Sub-board Badge -->
                    <div class="flex items-center space-x-2">
                        <h1 class="text-xl font-semibold text-gray-900">{ title }</h1>
                        if currentBoard != nil && parentBoard != nil {
                            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                                </svg>
                                Sub-board
                            </span>
                        }
                    </div>
                </div>
                
                <!-- Center: Search Bar -->
                <div class="flex-1 max-w-md mx-8">
                    <div class="relative">
                        <input 
                            type="text" 
                            id="persistent-search"
                            placeholder="Search boards, tasks..." 
                            class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm"
                            onclick="openGlobalSearch()"
                            onfocus="openGlobalSearch()"
                            readonly
                        />
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <svg class="h-4 w-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                            </svg>
                        </div>
                        <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                            <kbd class="inline-flex items-center px-2 py-1 bg-gray-100 border border-gray-300 rounded text-xs text-gray-500">Ctrl+K</kbd>
                        </div>
                    </div>
                </div>
                
                <!-- Right Side: Actions and User Menu -->
                <div class="flex items-center space-x-3">
                    if currentBoard != nil {
                        <!-- Board Actions -->
                        <!-- Presence Indicators -->
                        if len(onlineUsers) > 0 {
                            <div id="presence-area">
                                @PresenceIndicators(onlineUsers)
                            </div>
                        }
                        
                        <!-- Add Column Button -->
                        <button 
                            onclick="document.getElementById('add-column-modal').classList.remove('hidden')"
                            class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                        >
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                            </svg>
                            Add Column
                        </button>
                        
                        <!-- Invite Members Button -->
                        <button 
                            onclick="document.getElementById('invite-modal').classList.remove('hidden')"
                            class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                        >
                            <svg class="w-4 h-4 mr-2" fill="currentColor" stroke="none" viewBox="0 0 24 24">
                                <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4z"/>
                                <path d="M4 18c0-2.66 5.33-4 8-4 1.5 0 3.5.3 5.5 1v3H4v-0z"/>
                                <circle cx="19" cy="14" r="3.5" fill="#3B82F6"/>
                                <path d="M19 10v8M15 14h8" stroke="white" stroke-width="1.5" stroke-linecap="round"/>
                            </svg>
                            Invite
                        </button>
                        
                        <!-- Board Menu -->
                        <div class="relative">
                            <button 
                                onclick="toggleBoardMenu()"
                                class="p-2 rounded-md text-gray-400 hover:text-gray-600 hover:bg-gray-100"
                            >
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"></path>
                                </svg>
                            </button>
                            
                            <div id="board-menu" class="hidden absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-10">
                                <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Edit Board</a>
                                <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Board Settings</a>
                                <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Export Board</a>
                                <hr class="my-1"/>
                                if currentBoard != nil {
                                    <button 
                                        onclick={ deleteBoardFromMenuScript(currentBoard.ID.String()) }
                                        class="block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50"
                                    >
                                        Delete Board
                                    </button>
                                    <hr class="my-1"/>
                                }
                                <button 
                                    hx-post="/auth/logout"
                                    hx-confirm="Are you sure you want to log out?"
                                    class="block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50"
                                >
                                    Logout
                                </button>
                            </div>
                        </div>
                    } else {
                        <!-- Dashboard Actions -->
                        <button 
                            onclick="document.getElementById('create-board-modal').classList.remove('hidden')"
                            class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                        >
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                            </svg>
                            Create Board
                        </button>
                    }
                    
                    <!-- User Menu -->
                    <div class="relative">
                        <button 
                            onclick="toggleUserMenu()"
                            class="bg-gray-800 flex text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white"
                        >
                            <span class="sr-only">Open user menu</span>
                            <div class="h-8 w-8 rounded-full bg-blue-600 flex items-center justify-center">
                                <span class="text-sm font-medium text-white">U</span>
                            </div>
                        </button>
                        
                        <div id="user-menu" class="hidden origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5">
                            <div class="py-1">
                                <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Settings</a>
                                <button 
                                    hx-post="/auth/logout"
                                    hx-confirm="Are you sure you want to sign out?"
                                    class="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                                >
                                    Sign out
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    
    <script>
        function toggleUserMenu() {
            const menu = document.getElementById('user-menu');
            if (menu) {
                menu.classList.toggle('hidden');
            }
        }
        
        function toggleBoardMenu() {
            const menu = document.getElementById('board-menu');
            if (menu) {
                menu.classList.toggle('hidden');
            }
        }
        
        function openGlobalSearch() {
            document.getElementById('search-modal')?.classList.remove('hidden');
            document.getElementById('global-search')?.focus();
        }
        
        // Close menus when clicking outside
        document.addEventListener('click', function(event) {
            const userMenu = document.getElementById('user-menu');
            const boardMenu = document.getElementById('board-menu');
            const button = event.target.closest('button');
            
            // Close user menu if clicking outside
            if (userMenu && (!button || !button.onclick || button.onclick.toString().indexOf('toggleUserMenu') === -1)) {
                userMenu.classList.add('hidden');
            }
            
            // Close board menu if clicking outside
            if (boardMenu && (!button || !button.onclick || button.onclick.toString().indexOf('toggleBoardMenu') === -1)) {
                boardMenu.classList.add('hidden');
            }
        });
        
        // Global keyboard shortcut to open search (Cmd/Ctrl + K)
        document.addEventListener('keydown', function(event) {
            if ((event.ctrlKey || event.metaKey) && event.key === 'k') {
                event.preventDefault();
                openGlobalSearch();
            }
        });
    </script>
}

script deleteBoardFromMenuScript(boardID string) {
    deleteBoard(boardID);
}