package components

import "sudo/internal/models"
import "fmt"

templ Column(column models.Column, boardID string) {
    <div class="kanban-column" data-column-id={column.ID.String()}>
        <div class="column-content h-full">
            <!-- Column Header -->
            <div class="flex items-center justify-between mb-4">
                <div class="flex items-center space-x-2">
                    <h3 class="font-semibold text-theme-primary transition-colors duration-300">{column.Title}</h3>
                    <span class="bg-theme-secondary text-theme-primary px-2 py-1 rounded-full text-xs font-medium transition-colors duration-300">
                        {fmt.Sprintf("%d", len(column.Tasks))}
                    </span>
                </div>
                
                <div class="flex items-center space-x-1">
                    <!-- Add Task Button -->
                    <button 
                        onclick={ showAddTaskFormScript(column.ID.String()) }
                        class="p-1.5 text-theme-muted hover:text-theme-primary hover:bg-theme-secondary rounded-md transition-all duration-300"
                        title="Add task"
                    >
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                    </button>
                    
                    <!-- Column Menu -->
                    <div class="relative">
                        <button 
                            onclick={ toggleColumnMenuScript(column.ID.String()) }
                            class="p-1.5 text-theme-muted hover:text-theme-primary hover:bg-theme-secondary rounded-md transition-all duration-300"
                        >
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"></path>
                            </svg>
                        </button>
                        
                        <div id={`column-menu-` + column.ID.String()} class="hidden absolute right-0 mt-2 w-40 bg-theme-tertiary border border-theme-secondary rounded-md shadow-lg py-1 z-10 transition-colors duration-300">
                            <button class="block w-full text-left px-4 py-2 text-sm text-theme-primary hover:bg-theme-secondary transition-colors duration-300">Edit Column</button>
                            <button class="block w-full text-left px-4 py-2 text-sm text-theme-primary hover:bg-theme-secondary transition-colors duration-300">Clear All Tasks</button>
                            <hr class="my-1"/>
                            <button 
                                onclick={ deleteColumnScript(column.ID.String()) }
                                class="block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50"
                            >
                                Delete Column
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Add Task Form (Hidden by default) -->
            <div id={`add-task-form-` + column.ID.String()} class="hidden mb-4 bg-white rounded-lg p-3 border border-gray-200 shadow-sm">
                <form 
                    hx-post="/tasks" 
                    hx-target={`#tasks-` + column.ID.String()}
                    hx-swap="afterbegin"
                    hx-on::after-request={ hideAddTaskFormScript(column.ID.String()) }
                    class="space-y-3"
                >
                    <input type="hidden" name="column_id" value={column.ID.String()}/>
                    <input type="hidden" name="board_id" value={boardID}/>
                    
                    <div>
                        <input 
                            type="text" 
                            name="title" 
                            placeholder="Task title..."
                            required
                            class="w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                        />
                    </div>
                    
                    <div>
                        <textarea 
                            name="description" 
                            placeholder="Description (optional)..."
                            rows="2"
                            class="w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none"
                        ></textarea>
                    </div>
                    
                    <div>
                        <select 
                            name="priority"
                            class="w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent mb-3"
                        >
                            <option value="Low">Low Priority</option>
                            <option value="Medium" selected>Medium Priority</option>
                            <option value="High">High Priority</option>
                            <option value="Urgent">Urgent</option>
                        </select>
                        
                        <input 
                            type="datetime-local" 
                            name="deadline"
                            class="w-full px-2 py-2 text-xs border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent max-w-full"
                            style="max-width: 100%; min-width: 0;"
                        />
                    </div>
                    
                    <div class="flex space-x-2">
                        <button 
                            type="submit"
                            class="flex-1 bg-terracotta-600 dark:bg-yinmn-blue-600 text-white text-sm py-2 px-3 rounded-md hover:bg-terracotta-700 dark:hover:bg-yinmn-blue-700 transition-colors"
                        >
                            Add Task
                        </button>
                        <button 
                            type="button"
                            onclick={ hideAddTaskFormScript(column.ID.String()) }
                            class="px-3 py-2 text-sm text-gray-600 hover:text-gray-800 transition-colors"
                        >
                            Cancel
                        </button>
                    </div>
                </form>
            </div>
            
            <!-- Tasks List - Full Column Dropzone -->
            <div 
                id={`tasks-` + column.ID.String()}
                class="tasks-container"
                data-sortable="tasks"
                data-column-id={column.ID.String()}
            >
                for _, task := range column.Tasks {
                    @TaskCard(task)
                }
            </div>
            
            <!-- Drop Zone - Always visible at bottom -->
            <div class="empty-state-dropzone">
                if len(column.Tasks) == 0 {
                    <div class="flex items-center justify-center h-32 border-2 border-dashed border-gray-300 rounded-lg text-gray-500">
                        <div class="text-center">
                            <svg class="w-8 h-8 mx-auto mb-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                            </svg>
                            <p class="text-sm">Drop tasks here or</p>
                            <button 
                                onclick={ showAddTaskFormScript(column.ID.String()) }
                                class="text-blue-600 hover:text-blue-800 text-sm font-medium"
                            >
                                add a new task
                            </button>
                        </div>
                    </div>
                } else {
                    <div class="flex items-center justify-center h-16 border-2 border-dashed border-gray-200 rounded-lg text-gray-400 mt-3 hover:border-gray-300 transition-colors">
                        <p class="text-sm">Drop tasks here</p>
                    </div>
                }
            </div>
        </div>
    </div>
}

script showAddTaskFormScript(columnID string) {
    showAddTaskForm(columnID);
}

script toggleColumnMenuScript(columnID string) {
    toggleColumnMenu(columnID);
}

script hideAddTaskFormScript(columnID string) {
    hideAddTaskForm(columnID);
}

script deleteColumnScript(columnID string) {
    deleteColumn(columnID);
}

templ TaskModal() {
    <div id="task-modal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div class="bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto">
            <div class="flex items-center justify-between p-6 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">Task Details</h3>
                <button 
                    onclick="document.getElementById('task-modal').classList.add('hidden')"
                    class="text-gray-400 hover:text-gray-600"
                >
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            
            <div id="task-modal-content" class="p-6">
                <!-- Task content will be loaded here -->
                <div class="animate-pulse space-y-4">
                    <div class="h-4 bg-gray-200 rounded w-3/4"></div>
                    <div class="h-4 bg-gray-200 rounded w-1/2"></div>
                    <div class="h-20 bg-gray-200 rounded"></div>
                </div>
            </div>
        </div>
    </div>
}