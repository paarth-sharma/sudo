// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "sudo/templates/layouts"

func Login() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!-- Theme-aware login background with gradient --> <div class=\"min-h-screen flex items-center justify-center transition-all duration-500 bg-gradient-to-br from-terracotta-400 via-timberwolf-300 to-brown-sugar-400 dark:from-gunmetal-800 dark:via-gunmetal-600 dark:to-yinmn-blue-700\"><!-- Login card with theme support --><div class=\"max-w-md w-full bg-theme-tertiary rounded-xl shadow-2xl p-8 border border-theme-secondary transition-all duration-300\"><div class=\"text-center mb-8\"><h1 class=\"text-3xl font-bold text-theme-primary mb-2 transition-colors duration-300\">SUDO - Suck It Up and Do it</h1><p class=\"text-theme-secondary transition-colors duration-300\">Sign in with your email</p></div><form hx-post=\"/auth/send-otp\" hx-target=\"#auth-container\" class=\"space-y-6\"><div><label for=\"email\" class=\"block text-sm font-medium text-theme-primary mb-2 transition-colors duration-300\">Email Address</label> <input type=\"email\" id=\"email\" name=\"email\" required class=\"form-input\" placeholder=\"Enter your email\"></div><button type=\"submit\" class=\"w-full bg-terracotta-500 dark:bg-yinmn-blue-500 text-white py-3 px-4 rounded-lg hover:bg-terracotta-600 dark:hover:bg-yinmn-blue-600 focus:ring-2 focus:ring-terracotta-500 dark:focus:ring-yinmn-blue-500 focus:ring-offset-2 transition-all duration-300 font-medium\">Send Login Code</button></form><div id=\"auth-container\" class=\"mt-6\"></div><!-- Theme indicator for login page --><div class=\"text-center mt-6 text-xs text-theme-muted\"><span class=\"dark:hidden\">Light theme active</span> <span class=\"hidden dark:inline\">Dark theme active</span></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layouts.Base("Login - Kanban Board").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
