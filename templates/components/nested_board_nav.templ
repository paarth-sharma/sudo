package components

import "sudo/internal/models"
import "fmt"

// NestedBoardNavigation shows parent board link and nested boards list
templ NestedBoardNavigation(board models.Board, parentBoard *models.Board, nestedBoards []models.Board) {
    <!-- Parent Board Navigation -->
    if parentBoard != nil {
        <div class="mb-4 p-3 bg-blue-50 border border-blue-200 rounded-lg">
            <div class="flex items-center text-sm text-blue-700">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                </svg>
                <span class="text-blue-600">Parent Board:</span>
                <a 
                    href={ templ.SafeURL(fmt.Sprintf("/boards/%s", parentBoard.ID.String())) }
                    class="ml-2 font-medium text-blue-800 hover:text-blue-900 hover:underline"
                >
                    { parentBoard.Title }
                </a>
            </div>
        </div>
    }
    
    <!-- Nested Boards Section -->
    <div class="mb-6 p-4 bg-gray-50 border border-gray-200 rounded-lg" id="nested-boards-section">
        <div class="flex items-center justify-between mb-3">
            <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                <svg class="w-5 h-5 mr-2 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                </svg>
                Sub-boards ({ fmt.Sprintf("%d", len(nestedBoards)) })
            </h3>
            
            <!-- Create Sub-board Button - Only shown when tasks exist -->
            <button 
                onclick="loadTasksAndShowModal()"
                id="create-subboard-button"
                class="hidden inline-flex items-center px-3 py-2 border border-dashed border-gray-300 text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors"
            >
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
                Create Sub-board
            </button>
        </div>
        
        if len(nestedBoards) > 0 {
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
                for _, nestedBoard := range nestedBoards {
                    <a 
                        href={ templ.SafeURL(fmt.Sprintf("/boards/%s", nestedBoard.ID.String())) }
                        class="block p-3 bg-white border border-gray-200 rounded-md hover:border-gray-300 hover:shadow-sm transition-all duration-200 group"
                    >
                        <div class="flex items-start justify-between">
                            <div class="flex-1">
                                <h4 class="font-medium text-gray-900 group-hover:text-blue-600 mb-1">
                                    { nestedBoard.Title }
                                </h4>
                                if nestedBoard.Description != "" {
                                    <p class="text-sm text-gray-600 line-clamp-2">
                                        { nestedBoard.Description }
                                    </p>
                                }
                                <div class="mt-2 flex items-center text-xs text-gray-500">
                                    <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                    </svg>
                                    { nestedBoard.CreatedAt.Format("Jan 2, 2006") }
                                </div>
                            </div>
                            <svg class="w-4 h-4 text-gray-400 group-hover:text-blue-500 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                            </svg>
                        </div>
                    </a>
                }
            </div>
        } else {
            <!-- Empty state -->
            <div class="text-center py-8 text-gray-500">
                <svg class="w-12 h-12 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                </svg>
                <p class="text-sm">No sub-boards yet</p>
                <p class="text-xs text-gray-400 mt-1">Create one from an existing task to organize your work hierarchically</p>
            </div>
        }
    </div>
    
}

// Modal for creating nested board from existing tasks
templ CreateNestedBoardModal(boardID string) {
    <div id="create-nested-board-modal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
        <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
            <!-- Modal Header -->
            <div class="flex items-center justify-between pb-3 border-b">
                <h3 class="text-lg font-semibold text-gray-900">Create Sub-board from Task</h3>
                <button onclick="closeCreateNestedBoardModal()" class="text-gray-400 hover:text-gray-600">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            
            <!-- Modal Body -->
            <div class="mt-4 space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Select Parent Task</label>
                    <select 
                        id="parent-task-select"
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                        required
                    >
                        <option value="">Select a task to convert to sub-board...</option>
                        <!-- Options will be populated by JavaScript -->
                    </select>
                    <p class="mt-1 text-xs text-gray-500">
                        The selected task will be used to create a new sub-board with the task's title and description.
                    </p>
                </div>
                
                <!-- Task Preview (will be populated when a task is selected) -->
                <div id="task-preview" class="hidden p-3 bg-gray-50 rounded-md border">
                    <h4 class="text-sm font-medium text-gray-900 mb-1">Preview:</h4>
                    <div id="preview-content" class="text-sm text-gray-600">
                        <!-- Task details will be shown here -->
                    </div>
                </div>
                
                <div class="flex space-x-3 pt-4 border-t">
                    <button 
                        type="button"
                        onclick="createSubBoardFromSelectedTask()"
                        id="create-suboard-btn"
                        disabled
                        class="flex-1 bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:bg-gray-300 disabled:cursor-not-allowed"
                    >
                        Create Sub-board
                    </button>
                    <button 
                        type="button"
                        onclick="closeCreateNestedBoardModal()"
                        class="px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors focus:outline-none"
                    >
                        Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
}

script showCreateNestedBoardModal() {
    document.getElementById('create-nested-board-modal').classList.remove('hidden');
}

script closeCreateNestedBoardModal() {
    document.getElementById('create-nested-board-modal').classList.add('hidden');
}