// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "sudo/internal/models"

func UserProfileModal(user models.User) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"profile-modal\" class=\"hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"><div class=\"bg-white rounded-lg shadow-xl max-w-lg w-full mx-4\"><div class=\"flex items-center justify-between p-6 border-b border-gray-200\"><h3 class=\"text-lg font-semibold text-gray-900\">User Profile</h3><button onclick=\"document.getElementById('profile-modal').classList.add('hidden')\" class=\"text-gray-400 hover:text-gray-600\"><svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg></button></div><form hx-put=\"/profile\" hx-on::after-request=\"showProfileSuccess()\" class=\"p-6 space-y-4\"><!-- Profile Picture --><div class=\"flex justify-center mb-6\"><div class=\"relative\"><div class=\"w-24 h-24 bg-blue-600 rounded-full flex items-center justify-center text-white text-2xl font-bold\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if user.Name != "" {
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(user.GetInitials())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/user_profile_modal.templ`, Line: 30, Col: 51}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(user.Email[:2])
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/user_profile_modal.templ`, Line: 32, Col: 47}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div><button type=\"button\" class=\"absolute bottom-0 right-0 bg-gray-600 rounded-full p-2 text-white hover:bg-gray-700\"><svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\"></path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\"></path></svg></button></div></div><!-- Name Field --><div><label for=\"name\" class=\"block text-sm font-medium text-gray-700 mb-2\">Full Name</label> <input type=\"text\" id=\"name\" name=\"name\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(user.Name)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/user_profile_modal.templ`, Line: 56, Col: 40}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"></div><!-- Email --><div><label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-2\">Email Address</label> <input type=\"email\" id=\"email\" name=\"email\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(user.Email)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/user_profile_modal.templ`, Line: 70, Col: 41}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\" readonly><p class=\"text-xs text-gray-500 mt-1\">Email cannot be changed</p></div><!-- Bio --><div><label for=\"bio\" class=\"block text-sm font-medium text-gray-700 mb-2\">Bio (Optional)</label> <textarea id=\"bio\" name=\"bio\" rows=\"3\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\" placeholder=\"Tell us a bit about yourself...\"></textarea></div><!-- Timezone --><div><label for=\"timezone\" class=\"block text-sm font-medium text-gray-700 mb-2\">Timezone</label> <select id=\"timezone\" name=\"timezone\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"><option value=\"UTC\">UTC (Coordinated Universal Time)</option> <option value=\"America/New_York\">Eastern Time (ET)</option> <option value=\"America/Chicago\">Central Time (CT)</option> <option value=\"America/Denver\">Mountain Time (MT)</option> <option value=\"America/Los_Angeles\">Pacific Time (PT)</option> <option value=\"Europe/London\">London (GMT/BST)</option> <option value=\"Europe/Paris\">Paris (CET/CEST)</option> <option value=\"Asia/Tokyo\">Tokyo (JST)</option> <option value=\"Asia/Shanghai\">Shanghai (CST)</option> <option value=\"Australia/Sydney\">Sydney (AEDT/AEST)</option></select></div><!-- Password Change Section --><div class=\"border-t border-gray-200 pt-4 mt-6\"><h4 class=\"text-sm font-medium text-gray-900 mb-3\">Change Password</h4><div class=\"space-y-3\"><div><label for=\"current-password\" class=\"block text-sm font-medium text-gray-700 mb-2\">Current Password</label> <input type=\"password\" id=\"current-password\" name=\"current_password\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"></div><div><label for=\"new-password\" class=\"block text-sm font-medium text-gray-700 mb-2\">New Password</label> <input type=\"password\" id=\"new-password\" name=\"new_password\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"></div><div><label for=\"confirm-password\" class=\"block text-sm font-medium text-gray-700 mb-2\">Confirm New Password</label> <input type=\"password\" id=\"confirm-password\" name=\"confirm_password\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"></div></div></div><!-- Form Actions --><div class=\"flex justify-end space-x-3 pt-6 border-t border-gray-200\"><button type=\"button\" onclick=\"document.getElementById('profile-modal').classList.add('hidden')\" class=\"px-4 py-2 text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 transition-colors\">Cancel</button> <button type=\"submit\" class=\"px-4 py-2 bg-blue-600 text-white border border-transparent rounded-md hover:bg-blue-700 transition-colors\">Save Profile</button></div></form></div></div><!-- Success notification --><div id=\"profile-success\" class=\"hidden fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded z-50\"><div class=\"flex items-center\"><svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg> <span>Profile updated successfully!</span></div></div><script>\r\n        function showProfileSuccess() {\r\n            const notification = document.getElementById('profile-success');\r\n            notification.classList.remove('hidden');\r\n            setTimeout(() => {\r\n                notification.classList.add('hidden');\r\n            }, 3000);\r\n        }\r\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
