// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "sudo/internal/models"

func ExportModal(board models.Board) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"export-modal\" class=\"hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"><div class=\"bg-white rounded-lg shadow-xl max-w-lg w-full mx-4\"><div class=\"flex items-center justify-between p-6 border-b border-gray-200\"><h3 class=\"text-lg font-semibold text-gray-900\">Export Board</h3><button onclick=\"document.getElementById('export-modal').classList.add('hidden')\" class=\"text-gray-400 hover:text-gray-600\"><svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg></button></div><div class=\"p-6 space-y-6\"><!-- Export Format Selection --><div><h4 class=\"text-sm font-medium text-gray-900 mb-4\">Choose Export Format</h4><div class=\"space-y-3\"><label class=\"flex items-center\"><input type=\"radio\" name=\"export-format\" value=\"json\" checked class=\"focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300\"><div class=\"ml-3\"><div class=\"text-sm font-medium text-gray-900\">JSON</div><div class=\"text-sm text-gray-500\">Complete board data for backup or migration</div></div></label> <label class=\"flex items-center\"><input type=\"radio\" name=\"export-format\" value=\"csv\" class=\"focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300\"><div class=\"ml-3\"><div class=\"text-sm font-medium text-gray-900\">CSV</div><div class=\"text-sm text-gray-500\">Spreadsheet-friendly format for analysis</div></div></label> <label class=\"flex items-center\"><input type=\"radio\" name=\"export-format\" value=\"pdf\" class=\"focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300\"><div class=\"ml-3\"><div class=\"text-sm font-medium text-gray-900\">PDF</div><div class=\"text-sm text-gray-500\">Printable board overview and task list</div></div></label> <label class=\"flex items-center\"><input type=\"radio\" name=\"export-format\" value=\"markdown\" class=\"focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300\"><div class=\"ml-3\"><div class=\"text-sm font-medium text-gray-900\">Markdown</div><div class=\"text-sm text-gray-500\">Documentation-friendly format</div></div></label></div></div><!-- Export Options --><div><h4 class=\"text-sm font-medium text-gray-900 mb-4\">Export Options</h4><div class=\"space-y-3\"><label class=\"flex items-center\"><input type=\"checkbox\" checked class=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"> <span class=\"ml-2 text-sm text-gray-700\">Include completed tasks</span></label> <label class=\"flex items-center\"><input type=\"checkbox\" checked class=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"> <span class=\"ml-2 text-sm text-gray-700\">Include task comments</span></label> <label class=\"flex items-center\"><input type=\"checkbox\" checked class=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"> <span class=\"ml-2 text-sm text-gray-700\">Include member assignments</span></label> <label class=\"flex items-center\"><input type=\"checkbox\" class=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"> <span class=\"ml-2 text-sm text-gray-700\">Include timestamps</span></label></div></div><!-- Date Range Filter --><div><h4 class=\"text-sm font-medium text-gray-900 mb-4\">Date Range (Optional)</h4><div class=\"grid grid-cols-2 gap-3\"><div><label for=\"export-from-date\" class=\"block text-xs font-medium text-gray-700 mb-1\">From</label> <input type=\"date\" id=\"export-from-date\" class=\"w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"></div><div><label for=\"export-to-date\" class=\"block text-xs font-medium text-gray-700 mb-1\">To</label> <input type=\"date\" id=\"export-to-date\" class=\"w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"></div></div></div></div><!-- Footer --><div class=\"flex justify-end space-x-3 px-6 py-4 border-t border-gray-200\"><button onclick=\"document.getElementById('export-modal').classList.add('hidden')\" class=\"px-4 py-2 text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 transition-colors\">Cancel</button> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, templ.ComponentScript{Call: "exportBoard('" + board.ID.String() + "')"})
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<button onclick=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 templ.ComponentScript = templ.ComponentScript{Call: "exportBoard('" + board.ID.String() + "')"}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var2.Call)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\" class=\"px-4 py-2 bg-blue-600 text-white border border-transparent rounded-md hover:bg-blue-700 transition-colors\"><span class=\"flex items-center\"><svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path></svg> Export Board</span></button></div></div></div><!-- Export Progress Modal --><div id=\"export-progress-modal\" class=\"hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"><div class=\"bg-white rounded-lg shadow-xl max-w-sm w-full mx-4 p-6\"><div class=\"text-center\"><div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div><h3 class=\"text-lg font-semibold text-gray-900 mb-2\">Exporting Board...</h3><p class=\"text-sm text-gray-600\">Please wait while we prepare your export file.</p></div></div></div><script>\r\n        function exportBoard(boardId) {\r\n            const format = document.querySelector('input[name=\"export-format\"]:checked').value;\r\n            const options = {\r\n                includeCompleted: document.querySelector('input[type=\"checkbox\"]').checked,\r\n                includeComments: document.querySelectorAll('input[type=\"checkbox\"]')[1].checked,\r\n                includeAssignments: document.querySelectorAll('input[type=\"checkbox\"]')[2].checked,\r\n                includeTimestamps: document.querySelectorAll('input[type=\"checkbox\"]')[3].checked,\r\n                fromDate: document.getElementById('export-from-date').value,\r\n                toDate: document.getElementById('export-to-date').value\r\n            };\r\n            \r\n            // Hide export modal and show progress\r\n            document.getElementById('export-modal').classList.add('hidden');\r\n            document.getElementById('export-progress-modal').classList.remove('hidden');\r\n            \r\n            // Build query parameters\r\n            const params = new URLSearchParams({\r\n                format: format,\r\n                ...options\r\n            });\r\n            \r\n            // Create export request\r\n            fetch(`/api/boards/${boardId}/export?${params.toString()}`, {\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.blob();\r\n                }\r\n                throw new Error('Export failed');\r\n            })\r\n            .then(blob => {\r\n                // Create download link\r\n                const url = window.URL.createObjectURL(blob);\r\n                const a = document.createElement('a');\r\n                a.style.display = 'none';\r\n                a.href = url;\r\n                a.download = `board-export-${boardId}.${format}`;\r\n                document.body.appendChild(a);\r\n                a.click();\r\n                window.URL.revokeObjectURL(url);\r\n                document.body.removeChild(a);\r\n                \r\n                // Show success notification\r\n                showExportSuccess();\r\n            })\r\n            .catch(error => {\r\n                console.error('Export error:', error);\r\n                alert('Failed to export board. Please try again.');\r\n            })\r\n            .finally(() => {\r\n                // Hide progress modal\r\n                document.getElementById('export-progress-modal').classList.add('hidden');\r\n            });\r\n        }\r\n        \r\n        function showExportSuccess() {\r\n            // Create temporary success notification\r\n            const notification = document.createElement('div');\r\n            notification.className = 'fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded z-50';\r\n            notification.innerHTML = `\r\n                <div class=\"flex items-center\">\r\n                    <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                    </svg>\r\n                    <span>Board exported successfully!</span>\r\n                </div>\r\n            `;\r\n            \r\n            document.body.appendChild(notification);\r\n            \r\n            setTimeout(() => {\r\n                document.body.removeChild(notification);\r\n            }, 3000);\r\n        }\r\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
